#ifndef __DIRKCOEFF
#define __DIRKCOEFF

// Written by: C. Nguyen & P. Fernandez

void DIRKcoeff(double * c, double * d, double * t, Int nstage, Int torder) 
{
    if (nstage == 1 && torder == 1) {   //DIRK(1,1)
        d[0] = 1.0;
        c[0] = 1.0;
        t[0] = 1.0;
    }
    else if (nstage == 1 && torder == 2) {   //DIRK(1,2)
        d[0] = 2.0;
        c[0] = 2.0;
        t[0] = 0.5;
    }
    else if (nstage == 2 && torder == 2) {   //DIRK(2,2)           
        d[0] = 3.414213562373096;
        d[1] = -8.242640687119289;
        d[2] = 0.0;
        d[3] = 3.414213562373096;
        c[0] = 0.0;
        c[1] = 1.0;
        t[0] = 0.292893218813452;
        t[1] = 1.0;
    }
    else if (nstage == 2 && torder == 3) {   //DIRK(2,3)
        d[0] = 1.267949192431123;
        d[1] = 0.928203230275509;
        d[2] = 0.0;
        d[3] = 1.267949192431123;
        c[0] = 1.098076211353316;
        c[1] = 0.633974596215561;
        t[0] = 0.788675134594813;
        t[1] = 0.211324865405187;
    }
    else if (nstage == 3 && torder == 3) {   //DIRK(3,3)
        d[0] = 2.294280360323567;
        d[1] = -1.484721005721436;
        d[2] = -8.556127801733982;
        d[3] = 0.0;
        d[4] = 2.294280360323568;
        d[5] = 3.391748836909791;
        d[6] = 0.0;
        d[7] = 0.0;
        d[8] = 2.294280360323567;
        c[0] = 0.0;
        c[1] = 0.0;
        c[2] = 1.0;
        t[0] = 0.435866521500000;
        t[1] = 0.717933260750000;
        t[2] = 1.000000000000000;
    }
    else if (nstage == 3 && torder == 4) {   //DIRK(3,4)
        d[0] = 0.935822227524088;
        d[1] = 0.497940606760015;
        d[2] = -0.345865915800969;
        d[3] = 0.0;
        d[4] = 0.935822227524088;
        d[5] = 2.867525668568206;
        d[6] = 0.0;
        d[7] = 0.0;
        d[8] = 0.935822227524088;
        c[0] = 0.445622407287714;
        c[1] = 1.064177772475912;
        c[2] = 0.120614758428183;
        t[0] = 1.068579021301629;
        t[1] = 0.500000000000000;
        t[2] = -0.068579021301629;
    }
//     else if (nstage == 5 && torder == 5) {   //DIRK(5,5)
//         double a11 = (6.0-sqrt(6.0))/10.0;
//         double a21 = (-6.0+5*sqrt(6.0))/14.0;
//         double a31 = (888.0+607.0*sqrt(6.0))/2850.0; 
//         double a32 = (126.0-161.0*sqrt(6.0))/1425.0;
//         double a41 = (3153.0-3082.0*sqrt(6.0))/14250.0;
//         double a42 = (3213.0+1148.0*sqrt(6.0))/28500.0;
//         double a43 = (-267.0+88.0*sqrt(6.0))/500.0;
//         double a51 = (-32583.0+14638.0*sqrt(6.0))/71250.0;
//         double a52 = (-17199.0+364.0*sqrt(6.0))/142500.0;
//         double a53 = (1329.0-544.0*sqrt(6.0))/2500.0;
//         double a54 = (-96.0+131.0*sqrt(6.0))/625.0;
//         double b1  = 0.0;
//         double b2  = 0.0;
//         double b3  = (1.0/9.0);
//         double b4  = (16.0-sqrt(6.0))/36.0;
//         double b5  = (16.0+sqrt(6.0))/36.0;
//         double t1  = a11;
//         double t2  = (6.0+9.0*sqrt(6.0))/35.0;
//         double t3  = 1.0;
//         double t4  = (4.0-sqrt(6.0))/10.0;
//         double t5  = (4.0+sqrt(6.0))/10.0;
//         
//         a[0] = a11; a[5] = 0.0; a[10] = 0.0; a[15] = 0.0; a[20] = 0.0;
//         a[1] = a21; a[6] = a11; a[11] = 0.0; a[16] = 0.0; a[21] = 0.0;
//         a[2] = a31; a[7] = a32; a[12] = a11; a[17] = 0.0; a[22] = 0.0;
//         a[3] = a41; a[8] = a42; a[13] = a43; a[18] = a11; a[23] = 0.0;
//         a[4] = a51; a[9] = a52; a[14] = a53; a[19] = a54; a[24] = a11;
//         b[0] = b1;
//         b[1] = b2;
//         b[2] = b3;
//         b[3] = b4;
//         b[4] = b5; 
//         t[0] = t1;
//         t[1] = t2;
//         t[2] = t3;
//         t[3] = t4;
//         t[4] = t5; 
//         
//         d = inv(a);
//         c = b*d;
//     }
    else {
        printf("DIRK ( %d , %d ) not implemented yet.", nstage, torder);
        error("\n");
    }                
}

#endif
