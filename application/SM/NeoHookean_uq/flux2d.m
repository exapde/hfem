function [f,f_udg] = flux2d(pg,udg,param,time)
%FLUX2D
%    [F,F_UDG] = FLUX2D(PG,UDG,PARAM,TIME)

%    This function was generated by the Symbolic Math Toolbox version 7.1.
%    19-Mar-2017 09:35:20
[ng,nc] = size(udg);
nch = 2;
nd = 2;
lambda = param{2};
mu = param{1};
q11 = udg(:,3);
q12 = udg(:,5);
q21 = udg(:,4);
q22 = udg(:,6);
zero = zeros(ng,1);
t2 = q11.*q22;
t4 = q12.*q21;
t3 = t2-t4;
t5 = 1.0./t3;
t6 = log(t3);
t8 = lambda.*t6;
t7 = mu-t8;
f = [mu.*q11-q22.*t5.*t7;mu.*q21+q12.*t5.*t7;mu.*q12+q21.*t5.*t7;mu.*q22-q11.*t5.*t7];
if nargout > 1
    t9 = q22.^2;
    t10 = 1.0./t3.^2;
    t11 = -lambda.*q12.*q22.*t10-q12.*q22.*t7.*t10;
    t12 = q12.^2;
    t13 = -lambda.*q21.*q22.*t10-q21.*q22.*t7.*t10;
    t14 = t5.*t7;
    t15 = q12.*q21.*t7.*t10;
    t16 = lambda.*q12.*q21.*t10;
    t17 = t14+t15+t16;
    t18 = q21.^2;
    t19 = q11.*q22.*t7.*t10;
    t20 = lambda.*q11.*q22.*t10;
    t21 = -lambda.*q11.*q12.*t10-q11.*q12.*t7.*t10;
    t22 = -lambda.*q11.*q21.*t10-q11.*q21.*t7.*t10;
    t23 = q11.^2;
    f_udg = [zero;zero;zero;zero;zero;zero;zero;zero;mu+lambda.*t9.*t10+t7.*t9.*t10;t11;t13;t19+t20-t5.*t7;t11;mu+lambda.*t10.*t12+t7.*t10.*t12;t17;t21;t13;t17;mu+lambda.*t10.*t18+t7.*t10.*t18;t22;-t14+t19+t20;t21;t22;mu+lambda.*t10.*t23+t7.*t10.*t23];
end
f = reshape(f,ng,nch,nd);
f_udg = reshape(f_udg,ng,nch,nd,nc);
