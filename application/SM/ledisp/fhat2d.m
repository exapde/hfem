function [fh,fh_udg,fh_uh] = fhat2d(nl,pg,udg,uh,param,time)
%FHAT2D
%    [FH,FH_UDG,FH_UH] = FHAT2D(NL,PG,UDG,UH,PARAM,TIME)

%    This function was generated by the Symbolic Math Toolbox version 7.1.
%    23-Jul-2017 23:10:58
[ng,nc] = size(udg);
nch = 2;
nd = 2;
nl1 = nl(:,1);
nl2 = nl(:,2);
one = ones(ng,1);
param1 = param{1};
param2 = param{2};
param3 = param{3};
u1 = udg(:,1);
u2 = udg(:,2);
u3 = udg(:,3);
u4 = udg(:,4);
u5 = udg(:,5);
u6 = udg(:,6);
uh1 = uh(:,1);
uh2 = uh(:,2);
zero = zeros(ng,1);
t2 = u3+u6;
t3 = param2.*t2;
t4 = u4+u5;
fh = [param3.*(u1-uh1)+nl1.*(t3+param1.*u3.*2.0)+nl2.*param1.*t4;param3.*(u2-uh2)+nl2.*(t3+param1.*u6.*2.0)+nl1.*param1.*t4];
if nargout > 1
    t5 = one.*param3;
    t6 = nl2.*one.*param1;
    t7 = nl1.*one.*param1;
    t8 = param1.*2.0;
    t9 = param2+t8;
    fh_udg = [t5;zero;zero;t5;nl1.*one.*t9;nl2.*one.*param2;t6;t7;t6;t7;nl1.*one.*param2;nl2.*one.*t9];
end
if nargout > 2
    fh_uh = [-t5;zero;zero;-t5];
end
fh = reshape(fh,ng,nch);
fh_udg = reshape(fh_udg,ng,nch,nc);
fh_uh = reshape(fh_uh,ng,nch,nch);
